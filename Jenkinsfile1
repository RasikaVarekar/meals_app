pipeline {
    agent any

    environment {
        FLUTTER_HOME = 'C:/flutter_windows_3.24.4-stable/flutter'
        JAVA_HOME = 'C:/Program Files/Java/jdk-17'
        ANDROID_SDK_ROOT = 'C:/Users/Admin/AppData/Local/Android/Sdk'

        PATH = "${FLUTTER_HOME}/bin;${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin;${ANDROID_SDK_ROOT}/platform-tools;${JAVA_HOME}/bin;${env.PATH}"
    }

   stages {
        stage('Clone Repo') {
            steps {
                git branch: 'main', url: 'https://github.com/rasikavarekar/Surakshaa.git'
            }
        }

        stage('Flutter Version') {
            steps {
                bat 'flutter --version'
            }
        }

        stage('Flutter Doctor') {
            steps {
                bat 'flutter doctor'
            }
        }

        stage('Get Dependencies') {
            steps {
                bat 'flutter pub get'
            }
        }

        stage('Accept Licenses') {
            steps {
                bat 'flutter doctor --android-licenses'
            }
        }

        stage('Analyze Code') {
            steps {
                script {
                    // Allow warnings by not failing the build on non-zero exit code
                    def result = bat(script: 'flutter analyze', returnStatus: true)
                    if (result != 0) {
                        echo "Flutter analyze finished with warnings (exit code ${result})."
                    }
                }
            }
        }

        stage('Run Tests') {
            steps {
                bat 'flutter test'
            }
        }
    }

    post {
        always {
            echo 'üì¶ Pipeline execution complete.'
        }
        success {
            echo '‚úÖ Flutter build pipeline completed successfully!'
        }
        failure {
            echo '‚ùå Flutter build pipeline failed!'
        }
    }
}
