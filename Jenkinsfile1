pipeline {
    agent any

    environment {
        // Use forward slashes for consistency
        FLUTTER_HOME = 'C:/flutter_windows_3.24.4-stable/flutter'
        ANDROID_SDK_ROOT = 'C:/Users/Admin/AppData/Local/Android/Sdk'
        JAVA_HOME = 'C:/Program Files/Java/jdk-17'
        
        // Explicit Git paths
        GIT_EXEC_PATH = 'C:/Program Files/Git/cmd'  // Windows typically uses cmd\git.exe
        GIT_HOME = 'C:/Program Files/Git'
        
        // PATH construction - note the order matters
        PATH = "${GIT_HOME}/cmd;${GIT_HOME}/bin;${FLUTTER_HOME}/bin;${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin;${ANDROID_SDK_ROOT}/platform-tools;${JAVA_HOME}/bin;${env.PATH}"
    }

    options {
        timeout(time: 20, unit: 'MINUTES')
    }

    stages {
        stage('Verify Environment') {
            steps {
                bat '''
                    echo %PATH%
                    where git
                    where flutter
                    set
                '''
            }
        }

        stage('Flutter Version') {
            steps {
                bat '''
                    # Explicitly set Git path first
                    set PATH=C:/Program Files/Git/cmd;C:/Program Files/Git/bin;%PATH%
                    
                    # Verify Git is accessible
                    git --version
                    
                    # Now try Flutter
                    flutter --version
                    
                    # Alternative: Set Flutter's Git path directly
                    flutter config --git-dir="C:/Program Files/Git/cmd/git.exe"
                    flutter --version
                '''
            }
        }

        stage('Flutter Doctor') {
            steps {
                bat 'flutter doctor -v'
            }
        }

        stage('Accept Android Licenses') {
            steps {
                bat '"%ANDROID_SDK_ROOT%\\cmdline-tools\\latest\\bin\\sdkmanager.bat" --licenses < NUL'
            }
        }

        stage('Flutter Clean') {
            steps {
                bat 'flutter clean'
            }
        }

        stage('Flutter Pub Get') {
            steps {
                bat '''
                    echo ✅ Running flutter pub get...
                    flutter pub get || (echo ❌ flutter pub get failed! && exit 1)
                '''
            }
        }

        stage('Analyze Code') {
            steps {
                bat '''
                    echo ✅ Analyzing code...
                    flutter analyze || (echo ❌ flutter analyze failed! && exit 1)
                '''
            }
        }

        stage('Run Tests') {
            steps {
                bat '''
                    echo ✅ Running tests...
                    flutter test || (echo ❌ flutter test failed! && exit 1)
                '''
            }
        }
    }

    post {
        failure {
            echo '❌ Flutter build pipeline failed!'
        }
        success {
            echo '✅ Flutter build pipeline completed successfully!'
        }
    }
}
