pipeline {
    agent any

    environment {
        FLUTTER_HOME = 'C:/flutter_windows_3.24.4-stable/flutter'
        JAVA_HOME = 'C:/Program Files/Java/jdk-17'
        ANDROID_SDK_ROOT = "C:/Users/Admin/AppData/Local/Android/Sdk"
        GIT_PATH = 'C:/Program Files/Git/bin'
        PATH = "${FLUTTER_HOME}/bin;${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin;${GIT_PATH};${env.PATH}"
    }

    options {
        timeout(time: 20, unit: 'MINUTES')
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    checkout scm
                }
            }
        }
stage('Check Git Version') {
    steps {
        bat '''
            echo üîç Checking git version...
            where git
            git --version
        '''
    }
}


        stage('Flutter Clean') {
            steps {
               bat """ 
    echo ‚úÖ Running flutter clean...
    bat '"C:/flutter_windows_3.24.4-stable/flutter/bin/flutter.bat" clean'
 || (echo ‚ùå Flutter clean failed! && exit 1)
"""

            }
        }

        stage('Flutter Pub Get') {
            steps {
                bat '''
                    echo ‚úÖ Running flutter pub get...
                    flutter pub get || (echo ‚ùå flutter pub get failed! && exit 1)
                '''
            }
        }

        stage('Analyze Code') {
            steps {
                bat '''
                    echo ‚úÖ Analyzing code...
                    flutter analyze || (echo ‚ùå flutter analyze failed! && exit 1)
                '''
            }
        }

        stage('Run Tests') {
            steps {
                bat '''
                    echo ‚úÖ Running tests...
                    flutter test || (echo ‚ùå flutter test failed! && exit 1)
                '''
            }
        }
    }

    post {
        failure {
            echo '‚ùå Flutter build pipeline failed!'
        }
        success {
            echo '‚úÖ Flutter build pipeline completed successfully!'
        }
    }
}
